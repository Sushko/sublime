# [PackageDev] target_format: plist, ext: tmLanguage
---
name: kernell log
scopeName: text.klog
fileTypes: [klog]
uuid: 0f1542b9-eac7-485c-ade4-2f952adb4de5

# available colors

# color.white                   markup
# color.white.italic            markup.italic
# color.white.bold              markup.bold
# color.white.highlight         markup.raw
# color.grey                    comment
# color.red                     keyword
# color.red.highlight           invalid.illegal
# color.orange.italic           variable.parameter
# color.yellow                  string
# color.green                   entity.name
# color.green.italic            entity.other.inherited-class
# color.blue                    support.function
# color.blue.italic             storage.type
# color.purple                  constant.numeric
# color.purple.highlight        invalid.deprecated

patterns:

- comment: color templates

- name: markup.klog
  match: (^|(\s+))(color\.white)((\s+)|$)
- name: markup.italic.klog
  match: (^|(\s+))(color\.white\.italic)((\s+)|$)
- name: markup.bold.klog
  match: (^|(\s+))(color\.white\.bold)((\s+)|$)
- name: markup.raw.klog
  match: (color\.white\.highlight)
- name: comment.klog
  match: (^|(\s+))(color\.grey)((\s+)|$)
- name: keyword.klog
  match: (^|(\s+))(color\.red)((\s+)|$)
- name: invalid.illegal.klog
  match: (color\.red\.highlight)
- name: variable.parameter.klog
  match: (^|(\s+))(color\.orange\.italic)((\s+)|$)
- name: string.klog
  match: (^|(\s+))(color\.yellow)((\s+)|$)
- name: entity.name.klog
  match: (^|(\s+))(color\.green)((\s+)|$) 
- name: entity.other.inherited-class.klog
  match: (^|(\s+))(color\.green\.italic)((\s+)|$)
- name: support.function.klog
  match: (^|(\s+))(color\.blue)((\s+)|$)
- name: storage.type.klog
  match: (^|(\s+))(color\.blue\.italic)((\s+)|$)
- name: constant.numeric.klog
  match: (^|(\s+))(color\.purple)((\s+)|$)
- name: invalid.deprecated.klog
  match: (color\.purple\.highlight)

- comment: Match $ sign in usd values
- name: string.klog
  match: (^|(?<=\s))(\$)(?=([0-9]{1,3}(\,[0-9]{3})?(\,[0-9]{3})?)((\s)))

# Also need to add parsing hex & contradict with 1), 2)
#- comment: Match all digits
#  name: entity.name.function.klog
#  match: (\d+)

- comment: Match block comments /*...*/
  name: comment.block.klog
  begin: \/\*
  end: \*\/

- comment: Match line comments --, //, #
  name: comment.line.klog
  begin: (^|(\s+))(\-\-|\/\/|\#)
  end: $

- comment: Match quoted text in '..'
  name: string.klog
  begin: (^|(\s+))\'
  end: \'

- comment: Match quoted text in ".."
  name: string.klog
  begin: (^|(\s+))\"
  end: \"

- comment: Match links http:// https://
  name: support.type.klog
  begin: ((http://)|(https://)|(ftp://))
  end: ((\s+)|$)

- comment: Match menu items [..]
  name: constant.numeric.klog
  match: ^(\s*+)([0-9A-F]\)) # still don't work

- comment: Match keywords
  name: variable.parameter.klog
  match: (^|(?<=\s))(lex)((?=\s)|$) # add matches

# klog specific
- comment: Match func... and file...
  name: support.function.klog #blue
  match: (?<=\])((\s+)egress port(\s+))(?=(\[))

- comment: Match keywords
  name: markup.bold.klog #bold
  match: \b(slan0.)\b

- comment: Match func... and file...
  name: support.function.klog #blue
  match: (?<=([\r\n]^.{30}\]))((\s+)ingress port(\s+))(?=(\[))

- comment: Match line comments ###, ^^^, ---, ***
  name: comment.klog #grey
  begin: (^|(\s+))(\#\#\#|\^\^\^|\-\-\-|\*\*\*)
  end: (?=($|(SIM_LOG_IN_PACKET_STR)|(SIM_LOG_OUT_REPLICATION_STR)|(SIM_LOG_ENDED_IN_PACKET_STR)))

- comment: Match square brackets
  name: comment.klog #grey
  match: (\[|\])

- comment: Match numbers
  name: constant.numeric.klog #purple
  begin: (?<=\[)(\b(\s?)(0x?[0-9A-Fa-f]+)(\s?)\b)
  end: (?=(\]))

- comment: Match numbers
  name: constant.numeric.klog #purple
  begin: (?<=\[)(\b(\s?)([0-9]+)(\s?)\b)
  end: (?=(\]))

- comment: Match numbers
  name: constant.numeric.klog #purple
  match: ((\s?)\b(0x?[0-9A-Fa-f]+)\b(\s?))

- comment: Match numbers
  name: constant.numeric.klog #purple
  match: \b[0-9a-f]+\b

- comment: Match func... and file...
  name: string.klog #yelow
  begin: (?<= func\[)|(?<= file\[)
  end: (?=(\]))

- comment: Match keywords
  name: invalid.illegal.klog #red highlight
  match: (camera|Camera|CAMERA) # add matches

- comment: Match keywords
  name: keyword.klog # red
  match: \b(error|ERROR|Error|fail|FAIL|Fail|failed|FAILED|Failed)\b

- comment: Match headlines in [..]
  name: constant.numeric.klog
  begin: ^(\s*+)\[(\^?\])? # TOCHECK: "[^]]" and "[]]" valid?
  end: \]

- comment: Match keywords
  name: entity.name.klog #green
  match: (.*(Freeing unused kernel memory|Bootcharting|starting service 'zygote'|Boot completed|sleep\.monitor).*)



# - comment: Match keywords
#   name: markup.bold.klog #bold
#   match: \b(packetCmd)\b

# - comment: Match keywords
#   name: support.function.klog #blue
#   match: ((L3 is .*)|(NO L4 header in this packet)|(ingress packet from SLAN)|(send to SLAN)|(Final packet Hash value))

# - comment: Match func... and file...
#   name: keyword.klog #red
#   match: (FAILED the Router Trigger checks)

# - comment: Match func... and file...
#   name: entity.name.klog #green
#   match: ((PASSED the Router Trigger checks)|(No Bridge Bypass))


# ...